- id: Turn Heating On (Weekday Mornings)
  alias: Turn heating on (Weekday mornings)
  initial_state: 'on'
  trigger:
    platform: template
    value_template: '{{ states("sensor.time") == (states.input_datetime.heating_weekday_morning_start.attributes.timestamp
      | int | timestamp_custom("%H:%M", False)) }}'
  condition:
    condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
    service: input_boolean.turn_on
    data_template:
      entity_id: input_boolean.heating_timer
- id: Turn Heating On (Weekend Mornings)
  alias: Turn heating on (Weekend mornings)
  initial_state: 'on'
  trigger:
    platform: template
    value_template: '{{ states("sensor.time") == (states.input_datetime.heating_weekend_morning_start.attributes.timestamp
      | int | timestamp_custom("%H:%M", False)) }}'
  condition:
    condition: time
    weekday:
      - sat
      - sun
  action:
    service: input_boolean.turn_on
    data_template:
      entity_id: input_boolean.heating_timer
- id: Turn Heating On Based On Timer (Weekdays)
  alias: Turn heating on based on timer (Weekdays)
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.heating_timer
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: sensor.house_occupancy_status
      state: 'on'
    - condition: time
      weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.vestibule
      temperature: '{{ states("input_number.heating_temperature") }}'
  - service: climate.set_temperature
    data_template:
      entity_id: climate.kitchen
      temperature: '{{ states("input_number.heating_temperature") }}'
  - service: climate.set_temperature
    data_template:
      entity_id: climate.bedroom
      temperature: '{{ states("input_number.heating_temperature") }}'
- id: Turn Heating On Based On Timer (Weekends)
  alias: Turn heating on based on timer (Weekends)
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.heating_timer
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: sensor.house_occupancy_status
      state: 'on'
    - condition: time
      weekday:
      - sat
      - sun
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.vestibule
      temperature: '{{ states("input_number.heating_temperature") }}'
  - service: climate.set_temperature
    data_template:
      entity_id: climate.kitchen
      temperature: '{{ states("input_number.heating_temperature") }}'
  - service: climate.set_temperature
    data_template:
      entity_id: climate.bedroom
      temperature: '{{ states("input_number.heating_temperature") }}'
  - service: climate.set_temperature
    data_template:
      entity_id: climate.livingroom
      temperature: '{{ states("input_number.heating_temperature") }}'
- id: Turn Heating On On Arrival If Timer On
  alias: Turn heating on on arrival if timer on
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.house_occupancy_status
    from: 'off'
    to: 'on'
  condition:
    condition: state
    entity_id: input_boolean.heating_timer
    state: 'on'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.vestibule
      temperature: '{{ states("input_number.heating_temperature") }}'
  - service: climate.set_temperature
    data_template:
      entity_id: climate.kitchen
      temperature: '{{ states("input_number.heating_temperature") }}'
  - service: climate.set_temperature
    data_template:
      entity_id: climate.livingroom
      temperature: '{{ states("input_number.heating_temperature") }}'
- id: Turn Heating Off Based On Timer
  alias: Turn heating off based on timer
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_boolean.heating_timer
    to: 'off'
  action:
  - service: climate.set_temperature
    data:
      entity_id: climate.vestibule
      temperature: 7
  - service: climate.set_temperature
    data:
      entity_id: climate.livingroom
      temperature: 7
  - service: climate.set_temperature
    data:
      entity_id: climate.office
      temperature: 7
  - service: climate.set_temperature
    data:
      entity_id: climate.kitchen
      temperature: 7
  - service: climate.set_temperature
    data:
      entity_id: climate.katrin
      temperature: 7
  - service: climate.set_temperature
    data:
      entity_id: climate.bedroom
      temperature: 7
- id: Turn Heating Off (Weekday Mornings)
  alias: Turn heating off (Weekday mornings)
  initial_state: 'on'
  trigger:
    platform: template
    value_template: '{{ states("sensor.time") == (states.input_datetime.heating_weekday_morning_stop.attributes.timestamp
      | int | timestamp_custom("%H:%M", False)) }}'
  condition:
    condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
    service: input_boolean.turn_off
    data_template:
      entity_id: input_boolean.heating_timer
- id: Turn Heating Off (Weekday Evenings)
  alias: Turn heating off (Weekday evenings)
  initial_state: 'on'
  trigger:
    platform: template
    value_template: '{{ states("sensor.time") == (states.input_datetime.heating_weekday_evening_stop.attributes.timestamp
      | int | timestamp_custom("%H:%M", False)) }}'
  condition:
    condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
    service: input_boolean.turn_off
    data_template:
      entity_id: input_boolean.heating_timer
- id: Turn Heating Off (Weekend Mornings)
  alias: Turn heating off (Weekend mornings)
  initial_state: 'on'
  trigger:
    platform: template
    value_template: '{{ states("sensor.time") == (states.input_datetime.heating_weekend_morning_stop.attributes.timestamp
      | int | timestamp_custom("%H:%M", False)) }}'
  condition:
    condition: time
    weekday:
    - sat
    - sun
  action:
    service: input_boolean.turn_off
    data_template:
      entity_id: input_boolean.heating_timer
- id: Turn Heating Off (Weekend Evenings)
  alias: Turn heating off (Weekend evenings)
  initial_state: 'on'
  trigger:
    platform: template
    value_template: '{{ states("sensor.time") == (states.input_datetime.heating_weekend_evening_stop.attributes.timestamp
      | int | timestamp_custom("%H:%M", False)) }}'
  condition:
    condition: time
    weekday:
    - sat
    - sun
  action:
    service: input_boolean.turn_off
    data_template:
      entity_id: input_boolean.heating_timer
